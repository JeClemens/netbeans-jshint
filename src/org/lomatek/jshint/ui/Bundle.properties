AdvancedOption_DisplayName_JSHint=JSHint
AdvancedOption_Keywords_JSHint=JSHint
JSHintPanel.rhino.text=Assume Rhino
JSHintPanel.indent.text=4
JSHintPanel.evil.text=Warn about eval
JSHintPanel.node.text=Assume NodeJS
JSHintPanel.devel.text=Assume Development
JSHintPanel.maxlen.text=
JSHintPanel.passfail.text=Stop on first error
JSHintPanel.browser.text=Assume Browser
JSHintPanel.newcap.text=Tolerate uncapitalized constructors
JSHintPanel.eqeq.text=Warn about unsafe comparisons
JSHintPanel.undef.text=Warn when variable is undefined
JSHintPanel.debug.text=Warn about debugging code
JSHintPanel.forin.text=Warn about unsafe for..in
JSHintPanel.nomen.text=Tolerate dangling _ in identifiers
JSHintPanel.es5.text=Assume EcmaScript 5
JSHintPanel.maxerr.text=50
JSHintPanel.plusplus.text=Tolerate ++ and --
JSHintPanel.regexp.text=Tolerate . and [^...] in /RegExp/
JSHintPanel.newcap.toolTipText=[newcap] This option requires you to capitalize names of constructor functions.
JSHintPanel.white.text=Tolerate messy white space
JSHintPanel.devel.toolTipText=[devel] This option defines globals that are usually used for logging poor-man's debugging: console, alert, etc.
JSHintPanel.UnselectAll.text=Unselect all
JSHintPanel.SelectAll.text=Select all
JSHintPanel.camelcase.text=Force all variable names to use camelCase
JSHintPanel.bitwise.text=Warn when bitwise operators are used
JSHintPanel.curly.text=Warn when blocks omit {}
JSHintPanel.immed.text=Warn about the use of immediate function invocations
JSHintPanel.latedef.text=Warn about the use of a variable before it was defined
JSHintPanel.noarg.toolTipText=[noarg] This option prohibits the use of arguments.caller and arguments.callee.
JSHintPanel.noarg.text=Warn about arguments.caller and .callee
JSHintPanel.noempty.toolTipText=[noempty] This option warns when you have an empty block in your code.
JSHintPanel.noempty.text=Warn about empty blocks
JSHintPanel.nonew.toolTipText=[nonew] This option prohibits the use of constructor functions for side-effects.
JSHintPanel.nonew.text=Warn when new is used for side effects
JSHintPanel.unused.text=Warn when variable is defined but not used
JSHintPanel.strict.text=Warn when code is not in strict mode
JSHintPanel.trailing.text=Warn about trailing whitespace
JSHintPanel.asi.toolTipText=[asi] This option suppresses warnings about missing semicolons.
JSHintPanel.asi.text=Allow missing semicolons
JSHintPanel.boss.toolTipText=[boss] This option suppresses warnings about the use of assignments in cases where comparisons are expected.
JSHintPanel.boss.text=Warn about assignments inside if/for/...
JSHintPanel.eqnull.toolTipText=[eqnull] This option suppresses warnings about == null comparisons.
JSHintPanel.eqnull.text=Warn about == null
JSHintPanel.esnext.text=Warn about the code uses ES.next
JSHintPanel.expr.text=Allow the use of expressions on assignments
JSHintPanel.funcscope.text=Allow declaring variables inside of control structures
JSHintPanel.globalstrict.text=Allow the use of global strict mode
JSHintPanel.iterator.text=Allow the __iterator__ property
JSHintPanel.lastsemic.text=Allow missing semicolons for the last statement
JSHintPanel.laxbreak.text=Warn about unsafe line breaks
JSHintPanel.laxcomma.text=Allow comma-first coding style
JSHintPanel.loopfunc.text=Warn about functions inside loops
JSHintPanel.multistr.text=Allow multi-line strings
JSHintPanel.onecase.text=Allow switches with just one case
JSHintPanel.proto.text=Allow the __proto__ property
JSHintPanel.redexdash.text=Allow unescaped - in the end of regular expressions
JSHintPanel.scripturl.text=Allow the use of script-targeted URLs
JSHintPanel.smarttabs.text=Allow  mixed tabs and spaces
JSHintPanel.shadow.text=Allow variable shadowing
JSHintPanel.supernew.text=Allow weird constructions
JSHintPanel.couch.text=Assume CouchDB
JSHintPanel.dojo.toolTipText=[dojo] This option defines globals exposed by the Dojo Toolkit.
JSHintPanel.dojo.text=Assume Dojo
JSHintPanel.jquery.toolTipText=[jquery] This option defines globals exposed by the jQuery JavaScript library.
JSHintPanel.jquery.text=Assume jQuery
JSHintPanel.mootools.toolTipText=[mootools] This option defines globals exposed by the MooTools JavaScript framework.
JSHintPanel.mootools.text=Assume mootools
JSHintPanel.nonstandard.text=Assume non-standard
JSHintPanel.prototypejs.text=Assume PrototypeJS
JSHintPanel.worker.text=Assume Web Worker
JSHintPanel.wsh.text=Assume Windows
JSHintPanel.yui.text=Assume YUI
JSHintPanel.onevar.text=Allow only one var statement per function
JSHintPanel.bitwise.toolTipText=[bitwise] This option prohibits the use of bitwise operators such as ^ (XOR), | (OR) and others.
JSHintPanel.camelcase.toolTipText=[camelcase] This option allows you to force all variable names to use either camelCase style or UPPER_CASE with underscores.
JSHintPanel.curly.toolTipText=[curly] This option requires you to always put curly braces around blocks in loops and conditionals.
JSHintPanel.eqeq.toolTipText=[eqeqeq] This options prohibits the use of == and != in favor of === and !==.
JSHintPanel.forin.toolTipText=[forin] This option requires all for in loops to filter object's items.
JSHintPanel.immed.toolTipText=[immed] This option prohibits the use of immediate function invocations without wrapping them in parentheses.
JSHintPanel.latedef.toolTipText=[latedef] This option prohibits the use of a variable before it was defined.
JSHintPanel.plusplus.toolTipText=[plusplus] This option prohibits the use of unary increment and decrement operators.
JSHintPanel.regexp.toolTipText=[regexp] This option prohibits the use of unsafe . in regular expressions.
JSHintPanel.undef.toolTipText=[undef] This option prohibits the use of explicitly undeclared variables.
JSHintPanel.unused.toolTipText=[unused] This option warns when you define and never use your variables.
JSHintPanel.strict.toolTipText=[strict] This option requires all functions to run in EcmaScript 5's strict mode.
JSHintPanel.trailing.toolTipText=[trailing] This option makes it an error to leave a trailing whitespace in your code.
JSHintPanel.debug.toolTipText=[debug] This option suppresses warnings about the debugger statements in your code.
JSHintPanel.es5.toolTipText=[es5] This option tells JSHint that your code uses ECMAScript 5 specific features such as getters and setters.
JSHintPanel.esnext.toolTipText=[esnext] This option tells JSHint that your code uses ES.next specific features such as const.
JSHintPanel.evil.toolTipText=[evil] This option suppresses warnings about the use of eval.
JSHintPanel.expr.toolTipText=[expr] This option suppresses warnings about the use of expressions where normally you would expect to see assignments or function calls.
JSHintPanel.funcscope.toolTipText=[funcscope] This option suppresses warnings about declaring variables inside of control structures while accessing them later from the outside.
JSHintPanel.globalstrict.toolTipText=[globalstrict] This option suppresses warnings about the use of global strict mode.
JSHintPanel.iterator.toolTipText=[iterator] This option suppresses warnings about the __iterator__ property.
JSHintPanel.lastsemic.toolTipText=[lastsemic] This option suppresses warnings about missing semicolons, but only when the semicolon is omitted for the last statement in a one-line block.
JSHintPanel.laxbreak.toolTipText=[laxbreak] This option suppresses most of the warnings about possibly unsafe line breakings in your code.
JSHintPanel.laxcomma.toolTipText=[laxcomma] This option suppresses warnings about comma-first coding style.
JSHintPanel.loopfunc.toolTipText=[loopfunc] This option suppresses warnings about functions inside of loops.
JSHintPanel.multistr.toolTipText=[multistr] This option suppresses warnings about multi-line strings.
JSHintPanel.onecase.toolTipText=[onecase] This option suppresses warnings about switches with just one case.
JSHintPanel.proto.toolTipText=[proto] This option suppresses warnings about the __proto__ property. This property is deprecated and not supported by all browsers.
JSHintPanel.redexdash.toolTipText=[regexdash] This option suppresses warnings about unescaped - in the end of regular expressions.
JSHintPanel.scripturl.toolTipText=[scripturl] This option suppresses warnings about the use of script-targeted URLs\u2014such as javascript:....
JSHintPanel.smarttabs.toolTipText=[smarttabs] This option suppresses warnings about mixed tabs and spaces when the latter are used for alignmnent only.
JSHintPanel.shadow.toolTipText=[shadow] This option suppresses warnings about variable shadowing i.e. declaring a variable that had been already declared somewhere in the outer scope.
JSHintPanel.sub.text=Tolerate inefficient subscripting
JSHintPanel.sub.toolTipText=[sub] This option suppresses warnings about using [] notation when it can be expressed in dot notation: person['name'] vs. person.name.
JSHintPanel.supernew.toolTipText=[supernew] This option suppresses warnings about "weird" constructions like new function () { ... } and new Object;.
JSHintPanel.browser.toolTipText=[browser] This option defines globals exposed by modern browsers: all the way from good ol' document and navigator to the HTML5 FileReader and other new developments in the browser world.
JSHintPanel.couch.toolTipText=[couch] This option defines globals exposed by CouchDB.
JSHintPanel.node.toolTipText=[node] This option defines globals available when your code is running inside of the Node runtime environment.
JSHintPanel.nonstandard.toolTipText=[nonstandard] This option defines non-standard but widely adopted globals such as escape and unescape.
JSHintPanel.prototypejs.toolTipText=[prototypejs] This option defines globals exposed by the Prototype JavaScript framework.
JSHintPanel.rhino.toolTipText=[rhino] This option defines globals available when your code is running inside of the Rhino runtime environment.
JSHintPanel.worker.toolTipText=[worker] This option defines globals available when your code is running inside of a Web Worker.
JSHintPanel.wsh.toolTipText=[wsh] This option defines globals available when your code is running as a script for the Windows Script Host.
JSHintPanel.yui.toolTipText=[yui] This option defines globals exposed by the YUI JavaScript framework.
JSHintPanel.nomen.toolTipText=[nomen] This option disallows the use of dangling _ in variables.
JSHintPanel.onevar.toolTipText=[onevar] This option allows only one var statement per function.
JSHintPanel.passfail.toolTipText=[passfail] This option makes JSHint stop on the first error or warning.
JSHintPanel.white.toolTipText=[white] This option make JSHint check your source code against Douglas Crockford's JavaScript coding style.
JSHintPanel.indentLabel.text=Indentation
JSHintPanel.maxlenLabel.text=Maximum line length
JSHintPanel.maxerrLabel.text=Maximum number of errors
JSHintPanel.predefLabel.text=Predefined ( , separated)
JSHintPanel.indentLabel.toolTipText=[indent] This option enforces specific tab width for your code (default is 4).
JSHintPanel.maxlen.toolTipText=[maxlen] This option lets you set the maximum length of a line.
JSHintPanel.maxlenLabel.toolTipText=[maxlen] This option lets you set the maximum length of a line.
JSHintPanel.maxerr.toolTipText=[maxerr] The maximum number of warnings reported. (default is 50).
JSHintPanel.maxerrLabel.toolTipText=[maxerr] The maximum number of warnings reported. (default is 50).
JSHintPanel.OptionsScroll3.TabConstraints.tabTitle=Enviroments
JSHintPanel.OptionsScroll2.TabConstraints.tabTitle=Enforcing
JSHintPanel.OptionsScroll4.TabConstraints.tabTitle=Enviroments
